apply plugin: 'java-library'
apply plugin: 'application'
apply plugin: 'eclipse'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
	//compile(project(':ict.pag.webframework.log'))
	//compile(project(':ict.pag.webframework.XML'))
    // https://mvnrepository.com/artifact/org.javassist/javassist
	compile group: 'org.javassist', name: 'javassist', version: '3.27.0-GA'
	// https://mvnrepository.com/artifact/commons-cli/commons-cli
	implementation group: 'commons-cli', name: 'commons-cli', version: '1.4'
	// https://mvnrepository.com/artifact/dom4j/dom4j
	implementation group: 'dom4j', name: 'dom4j', version: '1.6.1'
	
	 // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:28.0-jre'
    
     // https://mvnrepository.com/artifact/org.json/json
	implementation group: 'org.json', name: 'json', version: '20201115'
	
	// https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
	

    def walaVersion = '1.5.5'
    implementation "com.ibm.wala:com.ibm.wala.shrike:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.util:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.core:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast.js:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast.js.rhino:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast.js:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast.js.rhino:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast.java:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.cast.java.ecj:${walaVersion}"
    implementation "com.ibm.wala:com.ibm.wala.dalvik:${walaVersion}"
}

jar {
	// before 5.17 
	//baseName = 'InstrumentationTool'
	// for JackEE
	// baseName = 'logIntrumental-JackEE'
	baseName = 'logIntrumental'
	// create manifest file for agent project
    manifest {
        attributes 'Premain-Class': 'ict.pag.m.instrumentation.Main.MyPremain'
        
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}
